{#
/**
 * @file
 * Default theme implementation to display a paragraph in Delicious Paragraphs.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{{ attach_library('dp_feature_box/dp-feature-box') }}
{%
set classes = [
  'dp-feature-box',
  'text-center',
]
%}
{% set inner_attributes = create_attribute() %}
{%
set inner_classes = [
  'dp-feature-box__inner',
  paragraph.field_dp_feature_box_bg_image.value ? 'dp-feature-box__inner--bg-black',
]
%}
<div{{ attributes.addClass(classes) }}{% if paragraph.field_dp_feature_box_bg_image.value %}style="background-image: url({{ bg_image }});"{% endif %}>
  <div{{ inner_attributes.addClass(inner_classes) }}>
    {{ content|without('field_dp_feature_box_button','field_dp_feature_box_bg_image','field_dp_feature_box_link_modal') }}
    {% if content.field_dp_feature_box_button|render is not empty %}
      <div class="dp-feature-box__button-link">
        <a href="{{ content.field_dp_feature_box_button.0['#url'] }}" class="btn btn-primary"{% if paragraph.field_dp_feature_box_link_modal.value %} data-toggle="modal" data-target="{{ content.field_dp_feature_box_button.0['#url'] }}"{% endif %}>{{ content.field_dp_feature_box_button.0['#title'] }}</a>
      </div>
    {% endif %}
  </div>
</div>
