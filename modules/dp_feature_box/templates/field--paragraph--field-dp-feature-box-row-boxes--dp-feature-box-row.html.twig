{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @see template_preprocess_field()
 */
#}
{%
set items_count = items|length
%}
{%
set classes = [
  items_count == 1 ? 'col-sm-12',
  items_count == 2 ? 'col-sm-6',
  items_count == 3 ? 'col-sm-4',
  items_count == 4 ? 'col-sm-6 col-md-3',
  items_count == 5 ? 'col-sm-5ths col-md-5ths',
  items_count == 6 ? 'col-sm-6 col-md-2',
  items_count == 7 ? 'col-md-3',
  items_count == 8 ? 'col-sm-6 col-md-3',
  items_count == 9 ? 'col-sm-4',
  items_count == 10 ? 'col-sm-5ths col-md-5ths',
  items_count == 11 ? 'col-md-3',
  items_count == 12 ? 'col-sm-6 col-md-3',
  items_count > 12 ? 'col-md-3',
]
%}
{% for item in items %}
  <div{{ attributes.addClass(classes) }}>{{ item.content }}</div>
{% endfor %}
